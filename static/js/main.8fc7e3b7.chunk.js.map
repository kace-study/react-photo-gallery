{"version":3,"sources":["components/Header/Header.js","components/Home/Home.js","components/Photo/Photo.js","components/SearchBox/SearchBox.js","components/Gallery/Gallery.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","setState","collapsed","state","react_default","a","createElement","reactstrap_es","fixed","color","dark","className","href","onClick","isOpen","navbar","Component","Home","onRouteChange","MAX_TEXT_SIZE","Photo","url","window","open","ajustText","text","length","substring","_this2","photo","tags","key","id","pageURL","top","width","height","src","webformatURL","user","SearchBox","onChange","e","keyword","target","value","search","onKeyPress","type","name","placeholder","addonType","fa","React","Gallery","encodeURIComponent","toLowerCase","fetch","method","then","response","json","data","hits","photos","catch","console","log","renderPhoto","md","components_Photo_Photo","size","offset","components_SearchBox_SearchBox","map","Footer","getYear","Date","getFullYear","App","route","components_Header_Header","components_Gallery_Gallery","components_Home_Home","components_Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fc7e3b7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink,  Container } from 'reactstrap';\nimport './Header.css';\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { collapsed: true };\n  }\n\n  toggleNavbar = ()  => {\n    this.setState({ collapsed: !this.state.collapsed });\n  }\n\n  render() {\n    return (\n      <Navbar fixed=\"top\" color=\"dark\" dark>\n        <Container>\n          <NavbarBrand className=\"text-ghost\" href=\"/\">KACE GALEERY</NavbarBrand>\n          <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n          <Collapse isOpen={!this.state.collapsed} navbar>\n            <Nav navbar>\n              <NavItem>\n                <NavLink href=\"https://kace-study-blog.com/\">Blog</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://github.com/kace-study/react-photo-gallery\">GitHub</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Button, Container } from 'reactstrap';\nimport './Home.css';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n        <Container className=\"text-center text-white\">\n          <h1>MUST WATCH</h1>\n          <p>There is no one who loves pain itself, who seeks after it and wants to have it, simply because it is pain...</p>\n          <Button \n            color=\"default\"\n            className=\"btn-ghost btn-white mt-5\"\n            onClick={() => this.props.onRouteChange('gallery')}\n          >\n            More Detail\n          </Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport './Photo.css';\n\nconst MAX_TEXT_SIZE = 20;\n\nclass Photo extends Component {\n\n  onClick = (url) => {\n    window.open(url, '_blank');\n  }\n\n  ajustText = (text) => {\n    return text.length > MAX_TEXT_SIZE ? \n      text.substring(0, MAX_TEXT_SIZE - 1) : text;\n  }\n\n  render() {\n    const photo = this.props.photo;\n    const tags = photo.tags.length > MAX_TEXT_SIZE ? \n      photo.tags.substring(0, MAX_TEXT_SIZE - 1) : photo.tags;\n\n    return (\n      <Card key={photo.id} className=\"mb-3\">\n        <CardImg \n          onClick={() => this.onClick(photo.pageURL)} \n          top \n          width=\"250px\" \n          height=\"250px\" \n          src={photo.webformatURL}\n        />\n        <CardBody>\n          <CardTitle>{photo.user}</CardTitle>\n          <CardText>{tags}</CardText>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default Photo;\n","\nimport React from 'react';\nimport { InputGroup, InputGroupAddon, Input, Button } from 'reactstrap';\nimport { FaSearch } from 'react-icons/fa';\n\nclass SearchBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { keyword: '' } \n  }\n\n  onChange = (e) => {\n    this.setState({ keyword: e.target.value });\n  }\n\n  onClick = () => {\n    this.props.search(this.state.keyword);\n  }\n\n  onKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.props.search(this.state.keyword);\n    }\n  }\n\n  render() {\n    return (\n      <InputGroup>\n        <Input \n          type=\"search\" \n          name=\"search\" \n          placeholder=\"Enter Keyword!\"\n          onChange={(e) => this.onChange(e)}\n          onKeyPress={(e) => this.onKeyPress(e)} \n          >\n        </Input>\n        <InputGroupAddon addonType=\"append\">\n          <Button color=\"dark\" onClick={() => this.onClick()} >\n            <FaSearch />\n          </Button>\n        </InputGroupAddon>\n      </InputGroup>\n    );\n  }\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Photo from '../Photo/Photo';\nimport SearchBox from '../SearchBox/SearchBox';\nimport './Gallery.css';\n\nclass Gallery extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { photos: [] }\n  }\n\n  componentDidMount() {\n    this.search('');\n  }\n\n  search = (keyword) => {\n    const param = { method: 'GET' };\n    const url = 'https://pixabay.com/api/?key=' + process.env.REACT_APP_DEV_API_KEY + '&q=' + encodeURIComponent(keyword.toLowerCase()) + '&image_type=photo&min_width=200&min_height=200';\n    fetch(url, param)\n      .then(response => response.json())\n      .then(data => {\n        if (data.hits.length > 0) {\n          this.setState({ photos: data.hits });\n        } else {\n          this.setState({ photos: [] });\n        }\n      })\n      .catch(console.log);\n  }\n\n  renderPhoto = (photo) => {\n    return <Col key={photo.id} md=\"4\"><Photo photo={photo} /></Col>;\n  }\n\n  render() {\n    return (\n        <Container className=\"gallery-container\">\n          <Row className=\"mb-5\">\n            <Col md={{ size: 6, offset: 3 }}>\n              <SearchBox search={this.search} />  \n            </Col>\n          </Row>\n          <Row>\n              { \n                this.state.photos.map((photo) => {\n                  return this.renderPhoto(photo);\n                })\n              }\n          </Row>\n        </Container>\n    );\n  }\n}\n\nexport default Gallery;\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Footer extends Component {\n\n  getYear = () =>  {\n    return new Date().getFullYear();\n  }\n\n  render() {\n    return (\n      <footer \n        id=\"footer\" \n        className='pt-3 text-center'>\n        <Container>\n          <Row>\n            <Col>\n              <p className=\"small\">Kace Gallery created by kace, Copyright &copy; {this.getYear()}</p>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport Gallery from './components/Gallery/Gallery';\nimport Footer from './components/Footer/Footer';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { route: 'home' };\n  }\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        { this.state.route === 'gallery' ?\n          <Gallery /> :\n          <Home onRouteChange={this.onRouteChange} />\n        }\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}